<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenTelemetry on Duende IdentityServer Documentation</title>
    <link>http://localhost:1313/identityserver/v7/diagnostics/otel/</link>
    <description>Recent content in OpenTelemetry on Duende IdentityServer Documentation</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Sep 2020 08:22:12 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/identityserver/v7/diagnostics/otel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Metrics</title>
      <link>http://localhost:1313/identityserver/v7/diagnostics/otel/metrics/</link>
      <pubDate>Thu, 10 Sep 2020 08:22:12 +0200</pubDate>
      <guid>http://localhost:1313/identityserver/v7/diagnostics/otel/metrics/</guid>
      <description>(added in v7.0)&#xA;OpenTelemetry metrics are run-time measurements that are are intended to provide an indication of overall health and are typically used to show graphs on a dashboard or to set up monitoring rules. When that monitoring reveals issues, traces and logs are used to investigate further. Open Telemetry monitoring tools often provide features to find the traces and logs corresponding to certain metrics.&#xA;IdentityServer emits metrics from the IdentityServer middleware and services.</description>
    </item>
    <item>
      <title>Traces</title>
      <link>http://localhost:1313/identityserver/v7/diagnostics/otel/traces/</link>
      <pubDate>Thu, 10 Sep 2020 08:22:12 +0200</pubDate>
      <guid>http://localhost:1313/identityserver/v7/diagnostics/otel/traces/</guid>
      <description>(added in v6.1)&#xA;Here&amp;rsquo;s e.g. the output for a request to the discovery endpoint:&#xA;When multiple applications send their traces to the same OTel server, this becomes super useful for following e.g. authentication flows over service boundaries.&#xA;The following screenshot shows the ASP.NET Core OpenID Connect authentication handler redeeming the authorization code:&#xA;&amp;hellip;and then contacting the userinfo endpoint:&#xA;The above screenshots are from https://www.honeycomb.io.&#xA;Tracing sources IdentityServer can emit very fine grained traces which is useful for performance troubleshooting and general exploration of the control flow.</description>
    </item>
    <item>
      <title>Setup</title>
      <link>http://localhost:1313/identityserver/v7/diagnostics/otel/setup/</link>
      <pubDate>Thu, 10 Sep 2020 08:22:12 +0200</pubDate>
      <guid>http://localhost:1313/identityserver/v7/diagnostics/otel/setup/</guid>
      <description>To start emitting Otel tracing and metrics information you need&#xA;add the Otel libraries to your IdentityServer and client applications start collecting traces and Metrics from the various IdentityServer sources (and other sources e.g. ASP.NET Core) For development a simple option is to export the tracing information to the console and use the Prometheus exporter to create a human readable /metrics endpoint for the metrics.&#xA;Add the Open Telemetry configuration to your service setup.</description>
    </item>
  </channel>
</rss>
